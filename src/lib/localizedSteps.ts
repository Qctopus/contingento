import { useTranslations } from 'next-intl'
import { type StepsCollection } from './steps'

export function useLocalizedSteps(): StepsCollection {
  const t = useTranslations('steps')

  return {
    PLAN_INFORMATION: {
      title: t('planInformation.title'),
      description: t('planInformation.description'),
      inputs: [
        {
          type: 'text',
          label: t('planInformation.inputs.companyName.label'),
          required: true,
          prompt: t('planInformation.inputs.companyName.prompt'),
          examples: [
            t('planInformation.inputs.companyName.examples.0'),
            t('planInformation.inputs.companyName.examples.1'),
            t('planInformation.inputs.companyName.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('planInformation.inputs.planManager.label'),
          required: true,
          prompt: t('planInformation.inputs.planManager.prompt'),
          examples: [
            t('planInformation.inputs.planManager.examples.0'),
            t('planInformation.inputs.planManager.examples.1'),
            t('planInformation.inputs.planManager.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('planInformation.inputs.alternateManager.label'),
          required: true,
          prompt: t('planInformation.inputs.alternateManager.prompt'),
          examples: [
            t('planInformation.inputs.alternateManager.examples.0'),
            t('planInformation.inputs.alternateManager.examples.1'),
            t('planInformation.inputs.alternateManager.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('planInformation.inputs.planLocation.label'),
          required: true,
          prompt: t('planInformation.inputs.planLocation.prompt'),
          examples: [
            t('planInformation.inputs.planLocation.examples.0'),
            t('planInformation.inputs.planLocation.examples.1'),
            t('planInformation.inputs.planLocation.examples.2'),
          ],
        },
      ],
    },

    BUSINESS_OVERVIEW: {
      title: t('businessOverview.title'),
      description: t('businessOverview.description'),
      inputs: [
        {
          type: 'text',
          label: t('businessOverview.inputs.businessLicense.label'),
          required: true,
          prompt: t('businessOverview.inputs.businessLicense.prompt'),
          examples: [
            t('businessOverview.inputs.businessLicense.examples.0'),
            t('businessOverview.inputs.businessLicense.examples.1'),
            t('businessOverview.inputs.businessLicense.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('businessOverview.inputs.businessPurpose.label'),
          required: true,
          prompt: t('businessOverview.inputs.businessPurpose.prompt'),
          examples: [
            t('businessOverview.inputs.businessPurpose.examples.0'),
            t('businessOverview.inputs.businessPurpose.examples.1'),
            t('businessOverview.inputs.businessPurpose.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('businessOverview.inputs.productsAndServices.label'),
          required: true,
          prompt: t('businessOverview.inputs.productsAndServices.prompt'),
          examples: [
            t('businessOverview.inputs.productsAndServices.examples.0'),
            t('businessOverview.inputs.productsAndServices.examples.1'),
            t('businessOverview.inputs.productsAndServices.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('businessOverview.inputs.serviceDeliveryMethods.label'),
          required: true,
          prompt: t('businessOverview.inputs.serviceDeliveryMethods.prompt'),
          examples: [
            t('businessOverview.inputs.serviceDeliveryMethods.examples.0'),
            t('businessOverview.inputs.serviceDeliveryMethods.examples.1'),
            t('businessOverview.inputs.serviceDeliveryMethods.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('businessOverview.inputs.operatingHours.label'),
          required: true,
          prompt: t('businessOverview.inputs.operatingHours.prompt'),
          examples: [
            t('businessOverview.inputs.operatingHours.examples.0'),
            t('businessOverview.inputs.operatingHours.examples.1'),
            t('businessOverview.inputs.operatingHours.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('businessOverview.inputs.keyPersonnel.label'),
          required: true,
          prompt: t('businessOverview.inputs.keyPersonnel.prompt'),
          examples: [
            t('businessOverview.inputs.keyPersonnel.examples.0'),
            t('businessOverview.inputs.keyPersonnel.examples.1'),
            t('businessOverview.inputs.keyPersonnel.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('businessOverview.inputs.minimumResources.label'),
          required: true,
          prompt: t('businessOverview.inputs.minimumResources.prompt'),
          examples: [
            t('businessOverview.inputs.minimumResources.examples.0'),
            t('businessOverview.inputs.minimumResources.examples.1'),
            t('businessOverview.inputs.minimumResources.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('businessOverview.inputs.customerBase.label'),
          required: true,
          prompt: t('businessOverview.inputs.customerBase.prompt'),
          examples: [
            t('businessOverview.inputs.customerBase.examples.0'),
            t('businessOverview.inputs.customerBase.examples.1'),
            t('businessOverview.inputs.customerBase.examples.2'),
          ],
        },
        {
          type: 'radio',
          label: t('businessOverview.inputs.serviceProviderBCP.label'),
          required: true,
          prompt: t('businessOverview.inputs.serviceProviderBCP.prompt'),
          options: [
            { label: t('businessOverview.inputs.serviceProviderBCP.options.0.label'), value: 'yes' },
            { label: t('businessOverview.inputs.serviceProviderBCP.options.1.label'), value: 'no' },
            { label: t('businessOverview.inputs.serviceProviderBCP.options.2.label'), value: 'partial' },
            { label: t('businessOverview.inputs.serviceProviderBCP.options.3.label'), value: 'unknown' },
          ],
        },
      ],
    },

    ESSENTIAL_FUNCTIONS: {
      title: t('essentialFunctions.title'),
      description: t('essentialFunctions.description'),
      inputs: [
        {
          type: 'table',
          label: t('essentialFunctions.inputs.businessFunctions.label'),
          required: true,
          prompt: t('essentialFunctions.inputs.businessFunctions.prompt'),
          tableColumns: [
            t('essentialFunctions.inputs.businessFunctions.tableColumns.0'),
            t('essentialFunctions.inputs.businessFunctions.tableColumns.1'),
            t('essentialFunctions.inputs.businessFunctions.tableColumns.2'),
            t('essentialFunctions.inputs.businessFunctions.tableColumns.3'),
            t('essentialFunctions.inputs.businessFunctions.tableColumns.4'),
          ],
          tableRowsPrompt: t('essentialFunctions.inputs.businessFunctions.tableRowsPromptPartial'),
          priorityOptions: [
            { label: t('essentialFunctions.inputs.businessFunctions.priorityOptions.0.label'), value: 'critical' },
            { label: t('essentialFunctions.inputs.businessFunctions.priorityOptions.1.label'), value: 'important' },
            { label: t('essentialFunctions.inputs.businessFunctions.priorityOptions.2.label'), value: 'useful' },
            { label: t('essentialFunctions.inputs.businessFunctions.priorityOptions.3.label'), value: 'deferrable' },
          ],
          downtimeOptions: [
            { label: t('essentialFunctions.inputs.businessFunctions.downtimeOptions.0.label'), value: '0-2h' },
            { label: t('essentialFunctions.inputs.businessFunctions.downtimeOptions.1.label'), value: '2-8h' },
            { label: t('essentialFunctions.inputs.businessFunctions.downtimeOptions.2.label'), value: '8-24h' },
            { label: t('essentialFunctions.inputs.businessFunctions.downtimeOptions.3.label'), value: '1-3d' },
            { label: t('essentialFunctions.inputs.businessFunctions.downtimeOptions.4.label'), value: '3-7d' },
            { label: t('essentialFunctions.inputs.businessFunctions.downtimeOptions.5.label'), value: '1-2w' },
            { label: t('essentialFunctions.inputs.businessFunctions.downtimeOptions.6.label'), value: '2w+' },
          ],
          examples: [
            t('essentialFunctions.inputs.businessFunctions.examples.0'),
            t('essentialFunctions.inputs.businessFunctions.examples.1'),
            t('essentialFunctions.inputs.businessFunctions.examples.2'),
          ],
        },
      ],
    },

    RISK_ASSESSMENT: {
      title: t('riskAssessment.title'),
      description: t('riskAssessment.description'),
      inputs: [
        {
          type: 'checkbox',
          label: t('riskAssessment.inputs.potentialHazards.label'),
          required: false,
          prompt: t('riskAssessment.inputs.potentialHazards.prompt'),
          options: [
            { label: t('riskAssessment.inputs.potentialHazards.options.0.label'), value: 'earthquake' },
            { label: t('riskAssessment.inputs.potentialHazards.options.1.label'), value: 'hurricane' },
            { label: t('riskAssessment.inputs.potentialHazards.options.2.label'), value: 'coastal_flood' },
            { label: t('riskAssessment.inputs.potentialHazards.options.3.label'), value: 'flash_flood' },
            { label: t('riskAssessment.inputs.potentialHazards.options.4.label'), value: 'landslide' },
            { label: t('riskAssessment.inputs.potentialHazards.options.5.label'), value: 'tsunami' },
            { label: t('riskAssessment.inputs.potentialHazards.options.6.label'), value: 'volcanic' },
            { label: t('riskAssessment.inputs.potentialHazards.options.7.label'), value: 'drought' },
            { label: t('riskAssessment.inputs.potentialHazards.options.8.label'), value: 'epidemic' },
            { label: t('riskAssessment.inputs.potentialHazards.options.9.label'), value: 'pandemic' },
            { label: t('riskAssessment.inputs.potentialHazards.options.10.label'), value: 'power_outage' },
            { label: t('riskAssessment.inputs.potentialHazards.options.11.label'), value: 'telecom_failure' },
            { label: t('riskAssessment.inputs.potentialHazards.options.12.label'), value: 'cyber_attack' },
            { label: t('riskAssessment.inputs.potentialHazards.options.13.label'), value: 'fire' },
            { label: t('riskAssessment.inputs.potentialHazards.options.14.label'), value: 'crime' },
            { label: t('riskAssessment.inputs.potentialHazards.options.15.label'), value: 'civil_disorder' },
            { label: t('riskAssessment.inputs.potentialHazards.options.16.label'), value: 'terrorism' },
            { label: t('riskAssessment.inputs.potentialHazards.options.17.label'), value: 'supply_disruption' },
            { label: t('riskAssessment.inputs.potentialHazards.options.18.label'), value: 'staff_unavailable' },
            { label: t('riskAssessment.inputs.potentialHazards.options.19.label'), value: 'economic_downturn' },
          ],
          examples: [
            t('riskAssessment.inputs.potentialHazards.examples.0'),
            t('riskAssessment.inputs.potentialHazards.examples.1'),
            t('riskAssessment.inputs.potentialHazards.examples.2'),
          ],
        },
        {
          type: 'special_risk_matrix',
          label: t('riskAssessment.inputs.riskMatrix.label'),
          prompt: t('riskAssessment.inputs.riskMatrix.prompt'),
          required: true,
          examples: [
            t('riskAssessment.inputs.riskMatrix.examples.0'),
            t('riskAssessment.inputs.riskMatrix.examples.1'),
            t('riskAssessment.inputs.riskMatrix.examples.2'),
          ],
        },
      ],
    },

    STRATEGIES: {
      title: t('strategies.title'),
      description: t('strategies.description'),
      inputs: [
        {
          type: 'checkbox',
          label: t('strategies.inputs.preventionStrategies.label'),
          required: false,
          prompt: t('strategies.inputs.preventionStrategies.prompt'),
          options: [
            { label: t('strategies.inputs.preventionStrategies.options.0.label'), value: 'maintenance' },
            { label: t('strategies.inputs.preventionStrategies.options.1.label'), value: 'physical_security' },
            { label: t('strategies.inputs.preventionStrategies.options.2.label'), value: 'cybersecurity' },
            { label: t('strategies.inputs.preventionStrategies.options.3.label'), value: 'insurance' },
            { label: t('strategies.inputs.preventionStrategies.options.4.label'), value: 'employee_training' },
            { label: t('strategies.inputs.preventionStrategies.options.5.label'), value: 'supplier_diversity' },
            { label: t('strategies.inputs.preventionStrategies.options.6.label'), value: 'financial_reserves' },
            { label: t('strategies.inputs.preventionStrategies.options.7.label'), value: 'data_backup' },
            { label: t('strategies.inputs.preventionStrategies.options.8.label'), value: 'building_upgrades' },
            { label: t('strategies.inputs.preventionStrategies.options.9.label'), value: 'emergency_supplies' },
            { label: t('strategies.inputs.preventionStrategies.options.10.label'), value: 'risk_monitoring' },
            { label: t('strategies.inputs.preventionStrategies.options.11.label'), value: 'community_partnerships' },
          ],
          examples: [
            t('strategies.inputs.preventionStrategies.examples.0'),
            t('strategies.inputs.preventionStrategies.examples.1'),
            t('strategies.inputs.preventionStrategies.examples.2'),
          ],
        },
        {
          type: 'checkbox',
          label: t('strategies.inputs.responseStrategies.label'),
          required: false,
          prompt: t('strategies.inputs.responseStrategies.prompt'),
          options: [
            { label: t('strategies.inputs.responseStrategies.options.0.label'), value: 'emergency_team' },
            { label: t('strategies.inputs.responseStrategies.options.1.label'), value: 'safety_procedures' },
            { label: t('strategies.inputs.responseStrategies.options.2.label'), value: 'emergency_communication' },
            { label: t('strategies.inputs.responseStrategies.options.3.label'), value: 'alternative_locations' },
            { label: t('strategies.inputs.responseStrategies.options.4.label'), value: 'remote_work' },
            { label: t('strategies.inputs.responseStrategies.options.5.label'), value: 'emergency_inventory' },
            { label: t('strategies.inputs.responseStrategies.options.6.label'), value: 'customer_continuity' },
            { label: t('strategies.inputs.responseStrategies.options.7.label'), value: 'media_management' },
            { label: t('strategies.inputs.responseStrategies.options.8.label'), value: 'emergency_finance' },
            { label: t('strategies.inputs.responseStrategies.options.9.label'), value: 'emergency_services' },
            { label: t('strategies.inputs.responseStrategies.options.10.label'), value: 'closure_procedures' },
            { label: t('strategies.inputs.responseStrategies.options.11.label'), value: 'essential_operations' },
          ],
          examples: [
            t('strategies.inputs.responseStrategies.examples.0'),
            t('strategies.inputs.responseStrategies.examples.1'),
            t('strategies.inputs.responseStrategies.examples.2'),
          ],
        },
        {
          type: 'checkbox',
          label: t('strategies.inputs.recoveryStrategies.label'),
          required: false,
          prompt: t('strategies.inputs.recoveryStrategies.prompt'),
          options: [
            { label: t('strategies.inputs.recoveryStrategies.options.0.label'), value: 'damage_assessment' },
            { label: t('strategies.inputs.recoveryStrategies.options.1.label'), value: 'insurance_claims' },
            { label: t('strategies.inputs.recoveryStrategies.options.2.label'), value: 'business_resumption' },
            { label: t('strategies.inputs.recoveryStrategies.options.3.label'), value: 'employee_support' },
            { label: t('strategies.inputs.recoveryStrategies.options.4.label'), value: 'customer_retention' },
            { label: t('strategies.inputs.recoveryStrategies.options.5.label'), value: 'supplier_restoration' },
            { label: t('strategies.inputs.recoveryStrategies.options.6.label'), value: 'reputation_management' },
            { label: t('strategies.inputs.recoveryStrategies.options.7.label'), value: 'financial_assistance' },
            { label: t('strategies.inputs.recoveryStrategies.options.8.label'), value: 'facility_repair' },
            { label: t('strategies.inputs.recoveryStrategies.options.9.label'), value: 'equipment_replacement' },
            { label: t('strategies.inputs.recoveryStrategies.options.10.label'), value: 'lessons_learned' },
            { label: t('strategies.inputs.recoveryStrategies.options.11.label'), value: 'community_support' },
          ],
          examples: [
            t('strategies.inputs.recoveryStrategies.examples.0'),
            t('strategies.inputs.recoveryStrategies.examples.1'),
            t('strategies.inputs.recoveryStrategies.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('strategies.inputs.longTermMeasures.label'),
          required: true,
          prompt: t('strategies.inputs.longTermMeasures.prompt'),
          examples: [
            t('strategies.inputs.longTermMeasures.examples.0'),
            t('strategies.inputs.longTermMeasures.examples.1'),
            t('strategies.inputs.longTermMeasures.examples.2'),
          ],
        },
      ],
    },

    ACTION_PLAN: {
      title: t('actionPlan.title'),
      description: t('actionPlan.description'),
      inputs: [
        {
          type: 'table',
          label: t('actionPlan.inputs.actionPlanByRisk.label'),
          prompt: t('actionPlan.inputs.actionPlanByRisk.prompt'),
          required: true,
          tableColumns: [
            t('actionPlan.inputs.actionPlanByRisk.tableColumns.0'),
            t('actionPlan.inputs.actionPlanByRisk.tableColumns.1'),
            t('actionPlan.inputs.actionPlanByRisk.tableColumns.2'),
            t('actionPlan.inputs.actionPlanByRisk.tableColumns.3'),
            t('actionPlan.inputs.actionPlanByRisk.tableColumns.4'),
          ],
          tableRowsPrompt: t('actionPlan.inputs.actionPlanByRisk.tableRowsPrompt'),
          examples: [
            t('actionPlan.inputs.actionPlanByRisk.examples.0'),
            t('actionPlan.inputs.actionPlanByRisk.examples.1'),
          ],
        },
        {
          type: 'text',
          label: t('actionPlan.inputs.implementationTimeline.label'),
          required: true,
          prompt: t('actionPlan.inputs.implementationTimeline.prompt'),
          examples: [
            t('actionPlan.inputs.implementationTimeline.examples.0'),
            t('actionPlan.inputs.implementationTimeline.examples.1'),
            t('actionPlan.inputs.implementationTimeline.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('actionPlan.inputs.resourceRequirements.label'),
          required: true,
          prompt: t('actionPlan.inputs.resourceRequirements.prompt'),
          examples: [
            t('actionPlan.inputs.resourceRequirements.examples.0'),
            t('actionPlan.inputs.resourceRequirements.examples.1'),
            t('actionPlan.inputs.resourceRequirements.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('actionPlan.inputs.responsibleParties.label'),
          required: true,
          prompt: t('actionPlan.inputs.responsibleParties.prompt'),
          examples: [
            t('actionPlan.inputs.responsibleParties.examples.0'),
            t('actionPlan.inputs.responsibleParties.examples.1'),
            t('actionPlan.inputs.responsibleParties.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('actionPlan.inputs.reviewSchedule.label'),
          required: true,
          prompt: t('actionPlan.inputs.reviewSchedule.prompt'),
          examples: [
            t('actionPlan.inputs.reviewSchedule.examples.0'),
            t('actionPlan.inputs.reviewSchedule.examples.1'),
            t('actionPlan.inputs.reviewSchedule.examples.2'),
          ],
        },
        {
          type: 'table',
          label: t('actionPlan.inputs.testingPlan.label'),
          prompt: t('actionPlan.inputs.testingPlan.prompt'),
          required: true,
          tableColumns: [
            t('actionPlan.inputs.testingPlan.tableColumns.0'),
            t('actionPlan.inputs.testingPlan.tableColumns.1'),
            t('actionPlan.inputs.testingPlan.tableColumns.2'),
            t('actionPlan.inputs.testingPlan.tableColumns.3'),
            t('actionPlan.inputs.testingPlan.tableColumns.4'),
          ],
          tableRowsPrompt: t('actionPlan.inputs.testingPlan.tableRowsPrompt'),
          examples: [
            t('actionPlan.inputs.testingPlan.examples.0'),
            t('actionPlan.inputs.testingPlan.examples.1'),
            t('actionPlan.inputs.testingPlan.examples.2'),
            t('actionPlan.inputs.testingPlan.examples.3'),
          ],
        },
      ],
    },

    CONTACTS_AND_INFORMATION: {
      title: t('contactsAndInformation.title'),
      description: t('contactsAndInformation.description'),
      inputs: [
        {
          type: 'table',
          label: t('contactsAndInformation.inputs.staffContacts.label'),
          prompt: t('contactsAndInformation.inputs.staffContacts.prompt'),
          required: true,
          tableColumns: [
            t('contactsAndInformation.inputs.staffContacts.tableColumns.0'),
            t('contactsAndInformation.inputs.staffContacts.tableColumns.1'),
            t('contactsAndInformation.inputs.staffContacts.tableColumns.2'),
            t('contactsAndInformation.inputs.staffContacts.tableColumns.3'),
            t('contactsAndInformation.inputs.staffContacts.tableColumns.4'),
          ],
          tableRowsPrompt: t('contactsAndInformation.inputs.staffContacts.tableRowsPrompt'),
          examples: [
            t('contactsAndInformation.inputs.staffContacts.examples.0'),
            t('contactsAndInformation.inputs.staffContacts.examples.1'),
            t('contactsAndInformation.inputs.staffContacts.examples.2'),
          ],
        },
        {
          type: 'table',
          label: t('contactsAndInformation.inputs.keyCustomers.label'),
          prompt: t('contactsAndInformation.inputs.keyCustomers.prompt'),
          required: false,
          tableColumns: [
            t('contactsAndInformation.inputs.keyCustomers.tableColumns.0'),
            t('contactsAndInformation.inputs.keyCustomers.tableColumns.1'),
            t('contactsAndInformation.inputs.keyCustomers.tableColumns.2'),
            t('contactsAndInformation.inputs.keyCustomers.tableColumns.3'),
            t('contactsAndInformation.inputs.keyCustomers.tableColumns.4'),
          ],
          tableRowsPrompt: t('contactsAndInformation.inputs.keyCustomers.tableRowsPrompt'),
          examples: [
            t('contactsAndInformation.inputs.keyCustomers.examples.0'),
            t('contactsAndInformation.inputs.keyCustomers.examples.1'),
            t('contactsAndInformation.inputs.keyCustomers.examples.2'),
          ],
        },
        {
          type: 'table',
          label: t('contactsAndInformation.inputs.supplierInfo.label'),
          prompt: t('contactsAndInformation.inputs.supplierInfo.prompt'),
          required: true,
          tableColumns: [
            t('contactsAndInformation.inputs.supplierInfo.tableColumns.0'),
            t('contactsAndInformation.inputs.supplierInfo.tableColumns.1'),
            t('contactsAndInformation.inputs.supplierInfo.tableColumns.2'),
            t('contactsAndInformation.inputs.supplierInfo.tableColumns.3'),
            t('contactsAndInformation.inputs.supplierInfo.tableColumns.4'),
          ],
          tableRowsPrompt: t('contactsAndInformation.inputs.supplierInfo.tableRowsPrompt'),
          examples: [
            t('contactsAndInformation.inputs.supplierInfo.examples.0'),
            t('contactsAndInformation.inputs.supplierInfo.examples.1'),
            t('contactsAndInformation.inputs.supplierInfo.examples.2'),
          ],
        },
        {
          type: 'table',
          label: t('contactsAndInformation.inputs.emergencyServices.label'),
          prompt: t('contactsAndInformation.inputs.emergencyServices.prompt'),
          required: true,
          tableColumns: [
            t('contactsAndInformation.inputs.emergencyServices.tableColumns.0'),
            t('contactsAndInformation.inputs.emergencyServices.tableColumns.1'),
            t('contactsAndInformation.inputs.emergencyServices.tableColumns.2'),
            t('contactsAndInformation.inputs.emergencyServices.tableColumns.3'),
            t('contactsAndInformation.inputs.emergencyServices.tableColumns.4'),
          ],
          tableRowsPrompt: t('contactsAndInformation.inputs.emergencyServices.tableRowsPrompt'),
          examples: [
            t('contactsAndInformation.inputs.emergencyServices.examples.0'),
            t('contactsAndInformation.inputs.emergencyServices.examples.1'),
            t('contactsAndInformation.inputs.emergencyServices.examples.2'),
            t('contactsAndInformation.inputs.emergencyServices.examples.3'),
            t('contactsAndInformation.inputs.emergencyServices.examples.4'),
            t('contactsAndInformation.inputs.emergencyServices.examples.5'),
          ],
        },
        {
          type: 'text',
          label: t('contactsAndInformation.inputs.criticalBusinessInfo.label'),
          required: true,
          prompt: t('contactsAndInformation.inputs.criticalBusinessInfo.prompt'),
          examples: [
            t('contactsAndInformation.inputs.criticalBusinessInfo.examples.0'),
            t('contactsAndInformation.inputs.criticalBusinessInfo.examples.1'),
          ],
        },
        {
          type: 'table',
          label: t('contactsAndInformation.inputs.planDistribution.label'),
          prompt: t('contactsAndInformation.inputs.planDistribution.prompt'),
          required: true,
          tableColumns: [
            t('contactsAndInformation.inputs.planDistribution.tableColumns.0'),
            t('contactsAndInformation.inputs.planDistribution.tableColumns.1'),
            t('contactsAndInformation.inputs.planDistribution.tableColumns.2'),
            t('contactsAndInformation.inputs.planDistribution.tableColumns.3'),
            t('contactsAndInformation.inputs.planDistribution.tableColumns.4'),
          ],
          tableRowsPrompt: t('contactsAndInformation.inputs.planDistribution.tableRowsPrompt'),
          examples: [
            t('contactsAndInformation.inputs.planDistribution.examples.0'),
            t('contactsAndInformation.inputs.planDistribution.examples.1'),
            t('contactsAndInformation.inputs.planDistribution.examples.2'),
          ],
        },
      ],
    },

    TESTING_AND_MAINTENANCE: {
      title: t('testingAndMaintenance.title'),
      description: t('testingAndMaintenance.description'),
      inputs: [
        {
          type: 'table',
          label: t('testingAndMaintenance.inputs.testingSchedule.label'),
          prompt: t('testingAndMaintenance.inputs.testingSchedule.prompt'),
          required: true,
          tableColumns: [
            t('testingAndMaintenance.inputs.testingSchedule.tableColumns.0'),
            t('testingAndMaintenance.inputs.testingSchedule.tableColumns.1'),
            t('testingAndMaintenance.inputs.testingSchedule.tableColumns.2'),
            t('testingAndMaintenance.inputs.testingSchedule.tableColumns.3'),
            t('testingAndMaintenance.inputs.testingSchedule.tableColumns.4'),
          ],
          tableRowsPrompt: t('testingAndMaintenance.inputs.testingSchedule.tableRowsPrompt'),
          examples: [
            t('testingAndMaintenance.inputs.testingSchedule.examples.0'),
            t('testingAndMaintenance.inputs.testingSchedule.examples.1'),
            t('testingAndMaintenance.inputs.testingSchedule.examples.2'),
            t('testingAndMaintenance.inputs.testingSchedule.examples.3'),
          ],
        },
        {
          type: 'table',
          label: t('testingAndMaintenance.inputs.revisionHistory.label'),
          prompt: t('testingAndMaintenance.inputs.revisionHistory.prompt'),
          required: true,
          tableColumns: [
            t('testingAndMaintenance.inputs.revisionHistory.tableColumns.0'),
            t('testingAndMaintenance.inputs.revisionHistory.tableColumns.1'),
            t('testingAndMaintenance.inputs.revisionHistory.tableColumns.2'),
            t('testingAndMaintenance.inputs.revisionHistory.tableColumns.3'),
            t('testingAndMaintenance.inputs.revisionHistory.tableColumns.4'),
          ],
          tableRowsPrompt: t('testingAndMaintenance.inputs.revisionHistory.tableRowsPrompt'),
          examples: [
            t('testingAndMaintenance.inputs.revisionHistory.examples.0'),
            t('testingAndMaintenance.inputs.revisionHistory.examples.1'),
            t('testingAndMaintenance.inputs.revisionHistory.examples.2'),
          ],
        },
        {
          type: 'table',
          label: t('testingAndMaintenance.inputs.improvementTracking.label'),
          prompt: t('testingAndMaintenance.inputs.improvementTracking.prompt'),
          required: true,
          tableColumns: [
            t('testingAndMaintenance.inputs.improvementTracking.tableColumns.0'),
            t('testingAndMaintenance.inputs.improvementTracking.tableColumns.1'),
            t('testingAndMaintenance.inputs.improvementTracking.tableColumns.2'),
            t('testingAndMaintenance.inputs.improvementTracking.tableColumns.3'),
            t('testingAndMaintenance.inputs.improvementTracking.tableColumns.4'),
          ],
          tableRowsPrompt: t('testingAndMaintenance.inputs.improvementTracking.tableRowsPrompt'),
          examples: [
            t('testingAndMaintenance.inputs.improvementTracking.examples.0'),
            t('testingAndMaintenance.inputs.improvementTracking.examples.1'),
            t('testingAndMaintenance.inputs.improvementTracking.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('testingAndMaintenance.inputs.annualReview.label'),
          required: true,
          prompt: t('testingAndMaintenance.inputs.annualReview.prompt'),
          examples: [
            t('testingAndMaintenance.inputs.annualReview.examples.0'),
            t('testingAndMaintenance.inputs.annualReview.examples.1'),
            t('testingAndMaintenance.inputs.annualReview.examples.2'),
          ],
        },
        {
          type: 'text',
          label: t('testingAndMaintenance.inputs.triggerEvents.label'),
          required: true,
          prompt: t('testingAndMaintenance.inputs.triggerEvents.prompt'),
          examples: [
            t('testingAndMaintenance.inputs.triggerEvents.examples.0'),
            t('testingAndMaintenance.inputs.triggerEvents.examples.1'),
            t('testingAndMaintenance.inputs.triggerEvents.examples.2'),
          ],
        },
      ],
    },
  }
} 